{"mappings":"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","sources":["src/js/index.js"],"sourcesContent":["import { createMovieModalMarkup, createMoviesMarkup } from \"./renderMarkup\";\nimport { fetchMovieByID, fetchMovies } from \"./tmdb-api\";\n\n// Seleccion elementos DOM\nconst heroForm = document.querySelector(\"form.hero__form\");\nconst movieCards = document.querySelector(\"ul.movie-cards__list\");\nconst paginationAddBtn = document.querySelector(\"button.pagination__add\");\nconst paginationSubBtn = document.querySelector(\"button.pagination__sub\");\nconst paginationSpan = document.querySelector(\"span.pagination__span\");\nconst backdropModal = document.querySelector(\"div.backdrop\");\nconst closeModal = document.querySelector(\".modal__btn\");\nconst modalMovie = document.querySelector(\".modal-movie\");\nconst addWatched = document.querySelector(\".watched\");\nconst addQueue = document.querySelector(\".queue\");\n\n// Variables\nlet page = 1;\nlet totalPages;\nlet query;\nlet selectedMovie = null;\n// Iniciar estos array como estado. si los defino [] cada vez que haga push al array iniciara desde 0. Pero si cargo el localStorage por defecto entonces las peliculas se iran guardadando en el array de manera correcta.\nconst watchedArray = JSON.parse(localStorage.getItem(\"watchedArray\")) || [];\nconst queueArray = JSON.parse(localStorage.getItem(\"queueArray\")) || [];\n\n// Funciones\nconst toogleModal = (isVisible) => {\n  if (isVisible) {\n    backdropModal.classList.add(\"visible\");\n  } else {\n    backdropModal.classList.remove(\"visible\");\n  }\n};\n\nconst renderInitialMovies = async () => {\n  const searchRoute = \"movie/popular?\";\n  const searchParams = new URLSearchParams({\n    page,\n  });\n  renderFetchMovies(searchRoute, searchParams);\n};\n\nconst renderFetchMovies = async (searchRoute, searchParams) => {\n  movieCards.innerHTML = \"\";\n  try {\n    const moviesData = await fetchMovies(searchRoute, searchParams);\n    totalPages = moviesData.total_pages;\n    console.log(moviesData.total_pages);\n    const movies = moviesData.results;\n    createMoviesMarkup(movies, movieCards);\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\n// Manejadores de eventos\nconst handleSubmit = async (e) => {\n  e.preventDefault();\n  page = 1;\n  paginationSpan.textContent = 1;\n  movieCards.innerHTML = \"\";\n\n  const form = e.target;\n  query = form.elements.movieInput.value;\n  const searchRoute = \"search/movie?\";\n\n  const searchParams = new URLSearchParams({\n    query,\n    page,\n  });\n\n  renderFetchMovies(searchRoute, searchParams);\n\n  form.reset();\n};\n// Paginacion\nconst handleAddPage = () => {\n  if (page < totalPages) {\n    page += 1;\n    paginationSpan.textContent = page;\n    const searchParams = new URLSearchParams({\n      page,\n    });\n\n    if (query) {\n      searchParams.set(\"query\", query);\n    }\n\n    const currentRoute = query ? \"search/movie?\" : \"movie/popular?\";\n    renderFetchMovies(currentRoute, searchParams);\n  }\n};\n\nconst handleSubPage = () => {\n  if (page > 1) {\n    page -= 1;\n    paginationSpan.textContent = page;\n    const searchParams = new URLSearchParams({\n      page,\n    });\n\n    if (query) {\n      searchParams.set(\"query\", query);\n    }\n\n    const currentRoute = query ? \"search/movie?\" : \"movie/popular?\";\n    renderFetchMovies(currentRoute, searchParams);\n  }\n  console.log(page);\n};\n\n// Manipulacion y exportacion de datos de la tarjeta elegida y Modal.\nconst handleSelectCard = async (e) => {\n  // Busca el ancestro m√°s cercano que sea un <li> con la clase movie-cards__item.\n  const card = e.target.closest(\"li.movie-cards__item\");\n  if (card) {\n    console.log(card.id);\n    toogleModal(true);\n    modalMovie.innerHTML = \"\";\n    try {\n      const movie = await fetchMovieByID(card.id);\n      selectedMovie = movie;\n      createMovieModalMarkup(movie, modalMovie);\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n};\n\nconst handleCloseModal = (e) => {\n  const closeBtn = e.target.closest(\"button.modal__btn\");\n  if (closeBtn) {\n    toogleModal(false);\n  }\n};\n\nconst handleAddWatched = (e) => {\n  if (selectedMovie) {\n    watchedArray.push(selectedMovie);\n    console.log(watchedArray);\n    const watchedArrayJSON = JSON.stringify(watchedArray);\n    localStorage.setItem(\"watchedArray\", watchedArrayJSON);\n  }\n};\n\nconst handleAddQueue = (e) => {\n  if (selectedMovie) {\n    queueArray.push(selectedMovie);\n    const queueArrayJSON = JSON.stringify(queueArray);\n    localStorage.setItem(\"queueArray\", queueArrayJSON);\n  }\n};\n\n// Eventos\nheroForm.addEventListener(\"submit\", handleSubmit);\npaginationAddBtn.addEventListener(\"click\", handleAddPage);\npaginationSubBtn.addEventListener(\"click\", handleSubPage);\nmovieCards.addEventListener(\"click\", handleSelectCard);\ncloseModal.addEventListener(\"click\", handleCloseModal);\naddWatched.addEventListener(\"click\", handleAddWatched);\naddQueue.addEventListener(\"click\", handleAddQueue);\n// Inicializacion\nrenderInitialMovies();\n"],"names":["$44ae6d9db4eaca0f$var$totalPages","$44ae6d9db4eaca0f$var$query","$bpxeT","parcelRequire","$44ae6d9db4eaca0f$var$heroForm","document","querySelector","$44ae6d9db4eaca0f$var$movieCards","$44ae6d9db4eaca0f$var$paginationAddBtn","$44ae6d9db4eaca0f$var$paginationSubBtn","$44ae6d9db4eaca0f$var$paginationSpan","$44ae6d9db4eaca0f$var$backdropModal","$44ae6d9db4eaca0f$var$closeModal","$44ae6d9db4eaca0f$var$modalMovie","$44ae6d9db4eaca0f$var$addWatched","$44ae6d9db4eaca0f$var$addQueue","$44ae6d9db4eaca0f$var$page","$44ae6d9db4eaca0f$var$selectedMovie","$44ae6d9db4eaca0f$var$watchedArray","JSON","parse","localStorage","getItem","$44ae6d9db4eaca0f$var$queueArray","$44ae6d9db4eaca0f$var$toogleModal","isVisible","classList","add","remove","$44ae6d9db4eaca0f$var$renderInitialMovies","$parcel$interopDefault","$2TvXO","mark","_callee","searchParams","URLSearchParams","page","$44ae6d9db4eaca0f$var$renderFetchMovies","searchRoute","moviesData","movies","innerHTML","$kK94C","fetchMovies","_ctx","sent","total_pages","console","log","results","$5118m","createMoviesMarkup","t0","message","$44ae6d9db4eaca0f$var$handleSubmit","e","form","preventDefault","textContent","target","elements","movieInput","value","query","reset","$44ae6d9db4eaca0f$var$handleSelectCard","card","movie","closest","id","fetchMovieByID","createMovieModalMarkup","addEventListener","set","push","watchedArrayJSON","stringify","setItem","queueArrayJSON"],"version":3,"file":"index.da232e72.js.map"}