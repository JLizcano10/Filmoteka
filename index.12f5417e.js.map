{"mappings":"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","sources":["src/js/index.js"],"sourcesContent":["import { createMovieModalMarkup, createMoviesMarkup } from './renderMarkup';\nimport { fetchMovieByID, fetchMovies } from './tmdb-api';\n\n// Seleccion elementos DOM\nconst heroForm = document.querySelector('form.hero__form');\nconst movieCards = document.querySelector('ul.movie-cards__list');\nconst paginationAddBtn = document.querySelector('button.pagination__add');\nconst paginationSubBtn = document.querySelector('button.pagination__sub');\nconst paginationSpan = document.querySelector('span.pagination__span');\nconst backdropModal = document.querySelector('div.backdrop');\nconst closeModal = document.querySelector('.modal__btn');\nconst modalMovie = document.querySelector('.modal-movie');\nconst addWatched = document.querySelector('.watched');\nconst addQueue = document.querySelector('.queue');\nconst loader = document.querySelector('.loader');\n\n// Variables\nlet page = 1;\nlet totalPages;\nlet query;\nlet selectedMovie = null;\nloader.style.display = 'none';\n// Iniciar estos array como estado. si los defino [] cada vez que haga push al array iniciara desde 0. Pero si cargo el localStorage por defecto entonces las peliculas se iran guardadando en el array de manera correcta.\nconst watchedArray = JSON.parse(localStorage.getItem('watchedArray')) || [];\nconst queueArray = JSON.parse(localStorage.getItem('queueArray')) || [];\n\n// Funciones\nconst toogleModal = isVisible => {\n  if (isVisible) {\n    backdropModal.classList.add('visible');\n  } else {\n    backdropModal.classList.remove('visible');\n  }\n};\n\nconst renderInitialMovies = async () => {\n  const searchRoute = 'movie/popular?';\n  const searchParams = new URLSearchParams({\n    page,\n  });\n  renderFetchMovies(searchRoute, searchParams);\n};\n\nconst renderFetchMovies = async (searchRoute, searchParams) => {\n  movieCards.innerHTML = '';\n  try {\n    const moviesData = await fetchMovies(searchRoute, searchParams);\n    totalPages = moviesData.total_pages;\n    const movies = moviesData.results;\n    if (movies.length > 0) {\n      createMoviesMarkup(movies, movieCards);\n    } else {\n      console.log('Error');\n      loader.style.display = 'block';\n    }\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\n// Manejadores de eventos\nconst handleSubmit = async e => {\n  e.preventDefault();\n  page = 1;\n  paginationSpan.textContent = 1;\n  movieCards.innerHTML = '';\n\n  const form = e.target;\n  query = form.elements.movieInput.value;\n  const searchRoute = 'search/movie?';\n\n  const searchParams = new URLSearchParams({\n    query,\n    page,\n  });\n\n  renderFetchMovies(searchRoute, searchParams);\n\n  form.reset();\n};\n// Paginacion\nconst handleAddPage = () => {\n  if (page < totalPages) {\n    page += 1;\n    paginationSpan.textContent = page;\n    const searchParams = new URLSearchParams({\n      page,\n    });\n\n    if (query) {\n      searchParams.set('query', query);\n    }\n\n    const currentRoute = query ? 'search/movie?' : 'movie/popular?';\n    renderFetchMovies(currentRoute, searchParams);\n  }\n};\n\nconst handleSubPage = () => {\n  if (page > 1) {\n    page -= 1;\n    paginationSpan.textContent = page;\n    const searchParams = new URLSearchParams({\n      page,\n    });\n\n    if (query) {\n      searchParams.set('query', query);\n    }\n\n    const currentRoute = query ? 'search/movie?' : 'movie/popular?';\n    renderFetchMovies(currentRoute, searchParams);\n  }\n};\n\n// Manipulacion y exportacion de datos de la tarjeta elegida y Modal.\nconst handleSelectCard = async e => {\n  // Busca el ancestro m√°s cercano que sea un <li> con la clase movie-cards__item.\n  const card = e.target.closest('li.movie-cards__item');\n  if (card) {\n    toogleModal(true);\n    modalMovie.innerHTML = '';\n    try {\n      const movie = await fetchMovieByID(card.id);\n      selectedMovie = movie;\n      createMovieModalMarkup(movie, modalMovie);\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n};\n\nconst handleCloseModal = e => {\n  const closeBtn = e.target.closest('button.modal__btn');\n  if (closeBtn) {\n    toogleModal(false);\n  }\n};\n\nconst handleAddWatched = e => {\n  if (selectedMovie) {\n    watchedArray.push(selectedMovie);\n    const watchedArrayJSON = JSON.stringify(watchedArray);\n    localStorage.setItem('watchedArray', watchedArrayJSON);\n  }\n};\n\nconst handleAddQueue = e => {\n  if (selectedMovie) {\n    queueArray.push(selectedMovie);\n    const queueArrayJSON = JSON.stringify(queueArray);\n    localStorage.setItem('queueArray', queueArrayJSON);\n  }\n};\n\n// Eventos\nheroForm.addEventListener('submit', handleSubmit);\npaginationAddBtn.addEventListener('click', handleAddPage);\npaginationSubBtn.addEventListener('click', handleSubPage);\nmovieCards.addEventListener('click', handleSelectCard);\ncloseModal.addEventListener('click', handleCloseModal);\naddWatched.addEventListener('click', handleAddWatched);\naddQueue.addEventListener('click', handleAddQueue);\n// Inicializacion\nrenderInitialMovies();\n"],"names":["$44ae6d9db4eaca0f$var$totalPages","$44ae6d9db4eaca0f$var$query","$bpxeT","parcelRequire","$44ae6d9db4eaca0f$var$heroForm","document","querySelector","$44ae6d9db4eaca0f$var$movieCards","$44ae6d9db4eaca0f$var$paginationAddBtn","$44ae6d9db4eaca0f$var$paginationSubBtn","$44ae6d9db4eaca0f$var$paginationSpan","$44ae6d9db4eaca0f$var$backdropModal","$44ae6d9db4eaca0f$var$closeModal","$44ae6d9db4eaca0f$var$modalMovie","$44ae6d9db4eaca0f$var$addWatched","$44ae6d9db4eaca0f$var$addQueue","$44ae6d9db4eaca0f$var$loader","$44ae6d9db4eaca0f$var$page","$44ae6d9db4eaca0f$var$selectedMovie","style","display","$44ae6d9db4eaca0f$var$watchedArray","JSON","parse","localStorage","getItem","$44ae6d9db4eaca0f$var$queueArray","$44ae6d9db4eaca0f$var$toogleModal","isVisible","classList","add","remove","$44ae6d9db4eaca0f$var$renderInitialMovies","$parcel$interopDefault","$2TvXO","mark","_callee","searchParams","URLSearchParams","page","$44ae6d9db4eaca0f$var$renderFetchMovies","searchRoute","moviesData","movies","innerHTML","$kK94C","fetchMovies","_ctx","sent","total_pages","results","length","$5118m","createMoviesMarkup","console","log","t0","message","$44ae6d9db4eaca0f$var$handleSubmit","e","form","preventDefault","textContent","target","elements","movieInput","value","query","reset","$44ae6d9db4eaca0f$var$handleSelectCard","card","movie","closest","fetchMovieByID","id","createMovieModalMarkup","addEventListener","set","push","watchedArrayJSON","stringify","setItem","queueArrayJSON"],"version":3,"file":"index.12f5417e.js.map"}