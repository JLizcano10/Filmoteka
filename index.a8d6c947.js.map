{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,S,oDAYA,MAAMC,KACJC,EAAIC,WACJC,EAAUC,cACVC,EAAaC,WACbC,EAAUC,WACVC,EAAUC,WACVC,EAAUC,SACVC,GACEC,EAAAC,gBAEEC,SACJC,EAAQC,WACRC,EAAUC,iBACVC,EAAgBC,iBAChBC,EAAgBC,eAChBC,EAAcC,OACdC,GACEb,EAAAc,cAGJ,IACIC,EACAC,EAFAC,EAAO,EAKXJ,EAAOK,MAAMC,QAAU,OACvBd,EAAWa,MAAMC,QAAU,QAG3B,EAAAC,EAAAC,eAEA,MAQMC,EAAoBC,MAAOC,EAAaC,KAE5CZ,EAAOK,MAAMC,QAAU,QACvB9B,EAAWqC,UAAY,GACvB,IACE,MAAMC,QAAmB,EAAAC,EAAAC,aAAYL,EAAaC,GAClDZ,EAAOK,MAAMC,QAAU,OACvBJ,EAAaY,EAAWG,YACxB,MAAMC,EAASJ,EAAWK,QACtBD,EAAOE,OAAS,IAClB,EAAAjD,EAAAkD,oBAAmBH,EAAQ1C,GAC3BgB,EAAWa,MAAMC,QAAU,QAE3BgB,SAASC,OAAOC,QAAQ,mC,CAE1B,MAAOC,GACPC,QAAQC,IAAIF,EAAMG,Q,GAwFtBtC,EAASuC,iBAAiB,UAnFLnB,MAAMoB,IACzBA,EAAEC,iBACF3B,EAAO,EACPN,EAAekC,YAAc,EAC7BxD,EAAWqC,UAAY,GAEvB,MAAMoB,EAAOH,EAAEI,OACf/B,EAAQ8B,EAAKE,SAASC,WAAWC,MACjC,MAEMzB,EAAe,IAAI0B,gBAAgB,C,MACvCnC,E,KACAC,IAGFK,EAPoB,gBAOWG,GAE/BqB,EAAKM,OAAO,IAmEd7C,EAAiBmC,iBAAiB,SAhEZ,KACpB,GAAIzB,EAAOF,EAAY,CACrBE,GAAQ,EACRN,EAAekC,YAAc5B,EAC7B,MAAMQ,EAAe,IAAI0B,gBAAgB,C,KACvClC,IAGED,GACFS,EAAa4B,IAAI,QAASrC,GAI5BM,EADqBN,EAAQ,gBAAkB,iBACfS,E,KAoDpChB,EAAiBiC,iBAAiB,SAhDZ,KACpB,GAAIzB,EAAO,EAAG,CACZA,GAAQ,EACRN,EAAekC,YAAc5B,EAC7B,MAAMQ,EAAe,IAAI0B,gBAAgB,C,KACvClC,IAGED,GACFS,EAAa4B,IAAI,QAASrC,GAI5BM,EADqBN,EAAQ,gBAAkB,iBACfS,E,KAoCpCpC,EAAWqD,iBAAiB,QAAStB,EAAAkC,kBACrC/D,EAAcmD,iBAAiB,QAAStB,EAAAmC,kBACxCpE,EAAKuD,iBAAiB,UAAWtB,EAAAoC,qBACjC3D,EAAW6C,iBAAiB,QAASe,EAAAC,kBACrC3D,EAAS2C,iBAAiB,QAASe,EAAAE,gBAvHPpC,WAC1B,MACME,EAAe,IAAI0B,gBAAgB,C,KACvClC,IAEFK,EAJoB,iBAIWG,EAAa,EAqH9CmC","sources":["src/js/index.js"],"sourcesContent":["import { createMoviesMarkup } from './renderMarkup';\nimport { fetchMovies } from './tmdb-api';\nimport { commonElements, indexElements } from './domElements';\nimport {\n  handleCloseModal,\n  handleKeyCloseModal,\n  handleSelectCard,\n  toogleModal,\n} from './modal';\nimport { handleAddQueue, handleAddWatched } from './handleMovieList';\n\n// DOM\nconst {\n  body,\n  movieCards,\n  backdropModal,\n  closeModal,\n  modalMovie,\n  addWatched,\n  addQueue,\n} = commonElements;\n\nconst {\n  heroForm,\n  pagination,\n  paginationAddBtn,\n  paginationSubBtn,\n  paginationSpan,\n  loader,\n} = indexElements;\n\n// Variables\nlet page = 1;\nlet totalPages;\nlet query;\n\n// inicializacion de elementos DOM\nloader.style.display = 'none';\npagination.style.display = 'none';\n\n// Funciones\ntoogleModal();\n\nconst renderInitialMovies = async () => {\n  const searchRoute = 'movie/popular?';\n  const searchParams = new URLSearchParams({\n    page,\n  });\n  renderFetchMovies(searchRoute, searchParams);\n};\n\nconst renderFetchMovies = async (searchRoute, searchParams) => {\n  // COMPROBAR CON PAGE PORQUE EL SERVIDOR LOCAL NO ME DEJA\n  loader.style.display = 'block';\n  movieCards.innerHTML = '';\n  try {\n    const moviesData = await fetchMovies(searchRoute, searchParams);\n    loader.style.display = 'none';\n    totalPages = moviesData.total_pages;\n    const movies = moviesData.results;\n    if (movies.length > 0) {\n      createMoviesMarkup(movies, movieCards);\n      pagination.style.display = 'flex';\n    } else {\n      Notiflix.Notify.failure('Sorry, no result for your search');\n    }\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\n// Manejadores de eventos\nconst handleSubmit = async e => {\n  e.preventDefault();\n  page = 1;\n  paginationSpan.textContent = 1;\n  movieCards.innerHTML = '';\n\n  const form = e.target;\n  query = form.elements.movieInput.value;\n  const searchRoute = 'search/movie?';\n\n  const searchParams = new URLSearchParams({\n    query,\n    page,\n  });\n\n  renderFetchMovies(searchRoute, searchParams);\n\n  form.reset();\n};\n// Paginacion\nconst handleAddPage = () => {\n  if (page < totalPages) {\n    page += 1;\n    paginationSpan.textContent = page;\n    const searchParams = new URLSearchParams({\n      page,\n    });\n\n    if (query) {\n      searchParams.set('query', query);\n    }\n\n    const currentRoute = query ? 'search/movie?' : 'movie/popular?';\n    renderFetchMovies(currentRoute, searchParams);\n  }\n};\n\nconst handleSubPage = () => {\n  if (page > 1) {\n    page -= 1;\n    paginationSpan.textContent = page;\n    const searchParams = new URLSearchParams({\n      page,\n    });\n\n    if (query) {\n      searchParams.set('query', query);\n    }\n\n    const currentRoute = query ? 'search/movie?' : 'movie/popular?';\n    renderFetchMovies(currentRoute, searchParams);\n  }\n};\n\n// const handleAddWatched = () => {\n//   const movie = getSelectedMovie();\n//   if (movie) {\n//     const movieIsExist = watchedArray.some(el => el.id === movie.id);\n//     if (!movieIsExist) {\n//       watchedArray.push(movie);\n//       localStorage.setItem('watchedArray', JSON.stringify(watchedArray));\n//     } else {\n//       Notiflix.Notify.warning('This movie is already in list');\n//     }\n//   }\n// };\n\n// const handleAddQueue = () => {\n//   const movie = getSelectedMovie();\n//   if (movie) {\n//     const movieIsExist = queueArray.some(el => el.id === movie.id);\n//     if (!movieIsExist) {\n//       queueArray.push(movie);\n//       localStorage.setItem('queueArray', JSON.stringify(queueArray));\n//     } else {\n//       Notiflix.Notify.warning('This movie is already in list');\n//     }\n//   }\n// };\n\n//\n\n// Eventos\nheroForm.addEventListener('submit', handleSubmit);\npaginationAddBtn.addEventListener('click', handleAddPage);\npaginationSubBtn.addEventListener('click', handleSubPage);\nmovieCards.addEventListener('click', handleSelectCard);\nbackdropModal.addEventListener('click', handleCloseModal);\nbody.addEventListener('keydown', handleKeyCloseModal);\naddWatched.addEventListener('click', handleAddWatched);\naddQueue.addEventListener('click', handleAddQueue);\n\n// Inicializacion\nrenderInitialMovies();\n"],"names":["$cky31","parcelRequire","body","$85a5f86b715fe7db$var$body","movieCards","$85a5f86b715fe7db$var$movieCards","backdropModal","$85a5f86b715fe7db$var$backdropModal","closeModal","$85a5f86b715fe7db$var$closeModal","modalMovie","$85a5f86b715fe7db$var$modalMovie","addWatched","$85a5f86b715fe7db$var$addWatched","addQueue","$85a5f86b715fe7db$var$addQueue","$5iv9P","commonElements","heroForm","$85a5f86b715fe7db$var$heroForm","pagination","$85a5f86b715fe7db$var$pagination","paginationAddBtn","$85a5f86b715fe7db$var$paginationAddBtn","paginationSubBtn","$85a5f86b715fe7db$var$paginationSubBtn","paginationSpan","$85a5f86b715fe7db$var$paginationSpan","loader","$85a5f86b715fe7db$var$loader","indexElements","$85a5f86b715fe7db$var$totalPages","$85a5f86b715fe7db$var$query","$85a5f86b715fe7db$var$page","style","display","$bTcpz","toogleModal","$85a5f86b715fe7db$var$renderFetchMovies","async","searchRoute","searchParams","innerHTML","moviesData","$9MaFa","fetchMovies","total_pages","movies","results","length","createMoviesMarkup","Notiflix","Notify","failure","error","console","log","message","addEventListener","e","preventDefault","textContent","form","target","elements","movieInput","value","URLSearchParams","reset","set","handleSelectCard","handleCloseModal","handleKeyCloseModal","$awt75","handleAddWatched","handleAddQueue","$85a5f86b715fe7db$var$renderInitialMovies"],"version":3,"file":"index.a8d6c947.js.map"}