{"mappings":"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","sources":["src/js/index.js"],"sourcesContent":["import { createMovieModalMarkup, createMoviesMarkup } from \"./renderMarkup\";\nimport { fetchMovieByID, fetchMovies } from \"./tmdb-api\";\n\n// Seleccion elementos DOM\nconst heroForm = document.querySelector(\"form.hero__form\");\nconst movieCards = document.querySelector(\"ul.movie-cards__list\");\nconst paginationAddBtn = document.querySelector(\"button.pagination__add\");\nconst paginationSubBtn = document.querySelector(\"button.pagination__sub\");\nconst paginationSpan = document.querySelector(\"span.pagination__span\");\nconst backdropModal = document.querySelector(\"div.backdrop\");\nconst closeModal = document.querySelector(\".modal__btn\");\nconst modalMovie = document.querySelector(\".modal-movie\");\nconst addWatched = document.querySelector(\".watched\");\nconst addQueue = document.querySelector(\".queue\");\n\n// Variables\nlet page = 1;\nlet totalPages;\nlet query;\nlet selectedMovie = null;\n// Iniciar estos array como estado. si los defino [] cada vez que haga push al array iniciara desde 0. Pero si cargo el localStorage por defecto entonces las peliculas se iran guardadando en el array de manera correcta.\nconst watchedArray = JSON.parse(localStorage.getItem(\"watchedArray\")) || [];\nconst queueArray = JSON.parse(localStorage.getItem(\"queueArray\")) || [];\n\n// Funciones\nconst toogleModal = (isVisible) => {\n  if (isVisible) {\n    backdropModal.classList.add(\"visible\");\n  } else {\n    backdropModal.classList.remove(\"visible\");\n  }\n};\n\nconst renderInitialMovies = async () => {\n  const searchRoute = \"movie/popular?\";\n  const searchParams = new URLSearchParams({\n    page,\n  });\n  renderFetchMovies(searchRoute, searchParams);\n};\n\nconst renderFetchMovies = async (searchRoute, searchParams) => {\n  movieCards.innerHTML = \"\";\n  try {\n    const moviesData = await fetchMovies(searchRoute, searchParams);\n    totalPages = moviesData.total_pages;\n    console.log(moviesData.total_pages);\n    const movies = moviesData.results;\n    createMoviesMarkup(movies, movieCards);\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\n// Manejadores de eventos\nconst handleSubmit = async (e) => {\n  e.preventDefault();\n  page = 1;\n  paginationSpan.textContent = 1;\n  movieCards.innerHTML = \"\";\n\n  const form = e.target;\n  query = form.elements.movieInput.value;\n  const searchRoute = \"search/movie?\";\n\n  const searchParams = new URLSearchParams({\n    query,\n    page,\n  });\n\n  renderFetchMovies(searchRoute, searchParams);\n\n  form.reset();\n};\n// Paginacion\nconst handleAddPage = () => {\n  if (page < totalPages) {\n    page += 1;\n    paginationSpan.textContent = page;\n    const searchParams = new URLSearchParams({\n      page,\n    });\n\n    if (query) {\n      searchParams.set(\"query\", query);\n    }\n\n    const currentRoute = query ? \"search/movie?\" : \"movie/popular?\";\n    renderFetchMovies(currentRoute, searchParams);\n  }\n};\n\nconst handleSubPage = () => {\n  if (page > 1) {\n    page -= 1;\n    paginationSpan.textContent = page;\n    const searchParams = new URLSearchParams({\n      page,\n    });\n\n    if (query) {\n      searchParams.set(\"query\", query);\n    }\n\n    const currentRoute = query ? \"search/movie?\" : \"movie/popular?\";\n    renderFetchMovies(currentRoute, searchParams);\n  }\n  console.log(page);\n};\n\n// Manipulacion y exportacion de datos de la tarjeta elegida y Modal.\nconst handleSelectCard = async (e) => {\n  // Busca el ancestro m√°s cercano que sea un <li> con la clase movie-cards__item.\n  const card = e.target.closest(\"li.movie-cards__item\");\n  if (card) {\n    console.log(card.id);\n    toogleModal(true);\n    modalMovie.innerHTML = \"\";\n    try {\n      const movie = await fetchMovieByID(card.id);\n      selectedMovie = movie;\n      createMovieModalMarkup(movie, modalMovie);\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n};\n\nconst handleCloseModal = (e) => {\n  const closeBtn = e.target.closest(\"button.modal__btn\");\n  if (closeBtn) {\n    toogleModal(false);\n  }\n};\n\nconst handleAddWatched = (e) => {\n  if (selectedMovie) {\n    watchedArray.push(selectedMovie);\n    console.log(watchedArray);\n    const watchedArrayJSON = JSON.stringify(watchedArray);\n    localStorage.setItem(\"watchedArray\", watchedArrayJSON);\n  }\n};\n\nconst handleAddQueue = (e) => {\n  if (selectedMovie) {\n    queueArray.push(selectedMovie);\n    const queueArrayJSON = JSON.stringify(queueArray);\n    localStorage.setItem(\"queueArray\", queueArrayJSON);\n  }\n};\n\n// Eventos\nheroForm.addEventListener(\"submit\", handleSubmit);\npaginationAddBtn.addEventListener(\"click\", handleAddPage);\npaginationSubBtn.addEventListener(\"click\", handleSubPage);\nmovieCards.addEventListener(\"click\", handleSelectCard);\ncloseModal.addEventListener(\"click\", handleCloseModal);\naddWatched.addEventListener(\"click\", handleAddWatched);\naddQueue.addEventListener(\"click\", handleAddQueue);\n// Inicializacion\nrenderInitialMovies();\n"],"names":["$cky31","parcelRequire","$85a5f86b715fe7db$var$heroForm","document","querySelector","$85a5f86b715fe7db$var$movieCards","$85a5f86b715fe7db$var$paginationAddBtn","$85a5f86b715fe7db$var$paginationSubBtn","$85a5f86b715fe7db$var$paginationSpan","$85a5f86b715fe7db$var$backdropModal","$85a5f86b715fe7db$var$closeModal","$85a5f86b715fe7db$var$modalMovie","$85a5f86b715fe7db$var$addWatched","$85a5f86b715fe7db$var$addQueue","$85a5f86b715fe7db$var$totalPages","$85a5f86b715fe7db$var$query","$85a5f86b715fe7db$var$page","$85a5f86b715fe7db$var$selectedMovie","$85a5f86b715fe7db$var$watchedArray","JSON","parse","localStorage","getItem","$85a5f86b715fe7db$var$queueArray","$85a5f86b715fe7db$var$toogleModal","isVisible","classList","add","remove","$85a5f86b715fe7db$var$renderFetchMovies","async","searchRoute","searchParams","innerHTML","moviesData","$9MaFa","fetchMovies","total_pages","console","log","movies","results","createMoviesMarkup","error","message","addEventListener","e","preventDefault","textContent","form","target","elements","movieInput","value","URLSearchParams","reset","set","card","closest","id","movie","fetchMovieByID","createMovieModalMarkup","push","watchedArrayJSON","stringify","setItem","queueArrayJSON","$85a5f86b715fe7db$var$renderInitialMovies"],"version":3,"file":"index.eabae5f0.js.map"}